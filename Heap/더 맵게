import java.util.*;

class Solution {
    public int solution(int[] scoville, int K) {
        int answer = 0;
        PriorityQueue<Integer> tmp = new PriorityQueue<>(); //낮은 숫자의 우선순위가 높은 Queue다. 즉, 낮은 숫자가 더 앞순에 놓이게 되어 가장 작은 숫자부터 높은 숫자대로 정렬된 트리 구조를 보인다.
        for (int i = 0; i < scoville.length; i++) {
            tmp.add(scoville[i]);
        }

        while (tmp.size() > 1 && tmp.element() < K) {
            int a = tmp.poll();
            int b = tmp.poll();
            if (tmp.size() == 0) {
                if (a + 2 * b >= K) {
                    return 1;
                }
                return -1;
            }
            tmp.add(a + 2 * b);
            answer++;
        }

        return answer;
    }
}
