import java.util.ArrayList;
import java.util.List;

class Solution {
    public int[] solution(long begin, long end) {
        int[] answer = new int[(int)(end-begin)+1];
        for(long i = begin;i<end+1;i++){
            if(i==1){
                answer[(int)(i-begin)]=0;
                continue;
            }
            if(isPrime(i)){
                answer[(int) (i-begin)]=1;
                continue;
            }
            answer[(int)(i-begin)] = makeBlock(i);
        }
        return answer;
    }
    
    private boolean isPrime(long n) {
        if(n==1){
            return false;
        }
        else{
            for (int i = 2; i<=(int)Math.sqrt(n); i++) {
                if (n % i == 0) {
                    return false;
                }
            }
            return true;
        }
    }

    private int makeBlock(long i) {
        List<Integer> list = new ArrayList<>();
        for(int index=2;index<=Math.sqrt(i);index++){
            if(i%index==0){
                list.add(index);
            }
        }
        for(int num : list){
            if(i/num<=10000000){
                return (int)i/num;
            }
        }
        return list.get(list.size()-1);
    }
}
