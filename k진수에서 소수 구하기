class Solution {
    public int isPrime(long n) { //1이면 소수, 0이면 소수가 아니다.
        if(n==1){
            return 0;
        }
        else{
            for (int i = 2; i<=(int)Math.sqrt(n); i++) {
                if (n % i == 0) {
                    return 0;
                }
            }
            return 1;
        }
    }
    public String radix(int num, int n) {
        StringBuilder sb = new StringBuilder();
        if (num == 0) return "0";
        while (num > 0) {
            if (num % n < 10) {
                sb.append(num % n);
            } else {
                sb.append((char)(num%n-10 + 'A'));
            }
            num /= n;
        }
        return sb.reverse().toString();
    }

    public int solution(int n, int k) {
        int answer = 0;
        String s = radix(n,k);
        String [] tmp = s.split("0");
        for(int i=0;i<tmp.length;i++){
            if(tmp[i].equals("")) continue;
            int x = isPrime(Long.parseLong(tmp[i]));
            if(x==1) answer++;
        }

        return answer;
    }
}
